/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mdqrs.view.personnel;

import dbcontroller.Driver;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mdqrs.classes.DataValidation;
import mdqrs.classes.JobType;
import mdqrs.dbcontroller.PersonnelDBController;
import mdqrs.listeners.MainListener;

/**
 *
 * @author Vienji
 */
public class PersonnelSetting extends javax.swing.JFrame {
    private DataValidation dataValidation = new DataValidation();
    private static MainListener mainListener;
    private static PersonnelSetting instance;
    private ArrayList<JobType> jobTypeList = new PersonnelDBController().getJobTypes();
    
    /**
     * Creates new form PersonnelSetting
     */
    private PersonnelSetting() {
        initComponents();
        initData();
        addWindowListener(new PersonnelSetting.CloseWindow());
    }

    private void initData(){
        DefaultTableModel jobTypeTableModel = (DefaultTableModel) personnelSettingTable.getModel();
        
        jobTypeList.forEach((e) -> {
            String[] data = {e.getType(), String.valueOf(e.getRatePerDay())};
            jobTypeTableModel.addRow(data);
        });   
    }
    
    public static PersonnelSetting getInstance(){
        if(instance == null){
            instance = new PersonnelSetting();
        }
        
        return instance;
    }
    
    public static void setListener(MainListener listener){
        mainListener = listener;
    }
    
    public void showFrame(){
        if(!isVisible()){
            setVisible(true);
        }
    }
    
    private class CloseWindow extends WindowAdapter {
        @Override
        public void windowClosing(WindowEvent e){
            instance = null;
            dispose();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        personnelSettingTable = new javax.swing.JTable();
        cancel = new javax.swing.JButton();
        save = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Personnel Settings");
        setResizable(false);

        personnelSettingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Job Type", "Rate Per Day"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(personnelSettingTable);
        if (personnelSettingTable.getColumnModel().getColumnCount() > 0) {
            personnelSettingTable.getColumnModel().getColumn(0).setResizable(false);
            personnelSettingTable.getColumnModel().getColumn(1).setResizable(false);
        }

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        instance = null;
        dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if(Driver.getConnection() != null){
            int count = 0;
            for(int i = 0; i < jobTypeList.size(); i++){
                JobType jobType = jobTypeList.get(i);

                if(dataValidation.validateDouble(String.valueOf(personnelSettingTable.getValueAt(i, 1)))){
                    jobType.setRatePerDay(Double.parseDouble(String.valueOf(personnelSettingTable.getValueAt(i, 1))));                          
                    jobTypeList.set(i, jobType);
                    count++;
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Invalid rate per day for  " + jobType.getType());
                }
            }

            if(count == jobTypeList.size()){
                new PersonnelDBController().updateRatePerDay(jobTypeList);
                mainListener.updatePersonnel();
                dispose();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Failed to save changes!");
                dispose();
            }
        } else {
            String message = "Error 59: An unexpected network error occurred.";
            JOptionPane.showMessageDialog(rootPane, message,"Error", 0);
        }  
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonnelSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonnelSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonnelSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonnelSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonnelSetting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable personnelSettingTable;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
